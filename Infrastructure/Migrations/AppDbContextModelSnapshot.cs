// <auto-generated />
using System;
using Api_Mediconnet.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_Mediconnet.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TEstadoUsuario", b =>
                {
                    b.Property<int>("NEstadoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(12)")
                        .HasColumnName("NEstadoUsuarioID");

                    b.Property<string>("CNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CNombre");

                    b.HasKey("NEstadoUsuarioID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CNombre" }, "CNombre")
                        .IsUnique();

                    b.ToTable("TEstadoUsuario", (string)null);
                });

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TEstadoVerificacion", b =>
                {
                    b.Property<int>("NEstadoVerificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(12)")
                        .HasColumnName("NEstadoVerificacion");

                    b.Property<string>("CNombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CNombre");

                    b.HasKey("NEstadoVerificacion")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CNombre" }, "CNombre")
                        .IsUnique()
                        .HasDatabaseName("CNombre1");

                    b.ToTable("TEstadoVerificacion", (string)null);
                });

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TRol", b =>
                {
                    b.Property<int>("NRolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(12)")
                        .HasColumnName("NRolID");

                    b.Property<string>("CNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CNombre");

                    b.HasKey("NRolID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CNombre" }, "CNombre")
                        .IsUnique()
                        .HasDatabaseName("CNombre2");

                    b.ToTable("TRol", (string)null);
                });

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TUsuarios", b =>
                {
                    b.Property<int>("NUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(32)")
                        .HasColumnName("nUsuarioID");

                    b.Property<string>("CApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CApellido");

                    b.Property<string>("CEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CEmail");

                    b.Property<string>("CNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CNombre");

                    b.Property<string>("CPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CPassword");

                    b.Property<DateTime>("DFechaRegistro")
                        .HasColumnType("DateTime")
                        .HasColumnName("DFechaRegistro");

                    b.Property<int>("NEstadoUsuarioFK")
                        .HasColumnType("int(12)")
                        .HasColumnName("NEstadoUsuarioFK");

                    b.Property<int>("NEstadoVerificacionFK")
                        .HasColumnType("int(12)");

                    b.Property<int>("NRolFK")
                        .HasColumnType("int(12)")
                        .HasColumnName("NRolFK");

                    b.HasKey("NUsuarioID")
                        .HasName("PRIMARY");

                    b.HasIndex("NEstadoVerificacionFK");

                    b.HasIndex(new[] { "CEmail" }, "CEmail")
                        .IsUnique();

                    b.HasIndex(new[] { "NEstadoUsuarioFK" }, "NEstadoUsuarioFK")
                        .IsUnique();

                    b.HasIndex(new[] { "NRolFK" }, "NRolFK")
                        .IsUnique();

                    b.ToTable("tUsuarios", (string)null);
                });

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TUsuarios", b =>
                {
                    b.HasOne("Api_Mediconnet.Domain.Entities.TEstadoVerificacion", "EstadoVerificacion")
                        .WithMany("Usuarios")
                        .HasForeignKey("NEstadoVerificacionFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_EstadoVerificacion");

                    b.Navigation("EstadoVerificacion");
                });

            modelBuilder.Entity("Api_Mediconnet.Domain.Entities.TEstadoVerificacion", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
